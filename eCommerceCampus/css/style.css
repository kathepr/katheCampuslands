@import url(variables.css);
*{
    padding: 0;
    margin: 0;
    font-family: "EncodeSans-Regular";
    box-sizing: border-box;
}

.header{
    /* background: red; */
    padding: var(--space-layout-padding-lr);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    height: 60px;
}


.header__information{
    /* background: green; */
}

.header__information span{
    font-family: "EncodeSans-Bold";

}

.header__login{
    /* background: violet; */
    width: 40px;
    height: 40px;
    border-radius: 50%;
    overflow: hidden;

/* La propiedad overflow en CSS controla cómo se maneja el contenido que desborda el tamaño del contenedor que lo contiene. Puede tomar varios valores:

visible: El contenido que desborda el contenedor se muestra fuera de este, sobresaliendo del borde.
hidden: El contenido que desborda el contenedor es ocultado, y no se muestra.
scroll: Se agrega una barra de desplazamiento para permitir al usuario desplazarse y ver el contenido que desborda.
auto: Similar a scroll, pero la barra de desplazamiento solo aparecerá cuando sea necesario, es decir, cuando el contenido desborde el contenedor.
inherit: Toma el valor de overflow del elemento padre.
initial: Establece el valor predeterminado de overflow, que es visible. */

}

.header__login img {
    width: 100%;

    /* object-fit: cover; */

    /* Cuando se establece object-fit: cover;, el contenido (imagen o video) se ajustará dentro del contenedor para cubrirlo completamente, manteniendo la relación de aspecto original. Esto significa que el contenido puede recortarse si es necesario para cumplir con las dimensiones del contenedor, pero se asegurará de que el contenido se ajuste y cubra completamente el área del contenedor sin distorsionar su relación de aspecto. */
}



.nav{

    padding: var(--space-layout-padding-lr);
    margin-top: 5px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

}

.nav__search{

    position: relative;

}
.nav__search input{
    outline: none;
    width: 260px;
    height: 45px;
    border: none;
    border-radius: 10px;
    padding-left: 2.5rem;
    padding-right: 1.5rem;
    border: 1px solid var(--color-3);

}

.search__icon{
    position: absolute;
    display: block;
    bottom: .6rem;
    left: .8rem;
    user-select: none;
    cursor: pointer;
}

.nav__filter{
    background: var(--color-1);
    width:40px;
    height:40px;
    border-radius: 10px;
    position: relative;

}

.nav__filter img {
    width: 20px;
    position: absolute;
    inset: 0;
    margin: auto
}

.main{
    /* background: red; */
    padding: var(--space-layout-padding-lr);
    margin-top: 15px;
}

.main__nav{
    /* background: violet;
    padding: 10px; */

}

.nav__ul{
    /* background: darkgray; */
    height: 50px;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px;
    overflow-x: scroll;
}

.nav__ul li{
    list-style: none;
}

.nav__ul li a{
    width:105px;
    height: 35px;
    font-family:"EncodeSans-Medium";
    /* background: orange; */
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 5px;
    padding: 5px;
    border-radius: 8px;
    border: 1px solid var(--color-3);
    color: var(--color-1);
    background: var(--color-5);

}

.nav__ul li a:hover{
    filter: invert(1)

    /* background: var(--color-1);
    color: var(--color-2) */
    
}

.footer{
    background: red;
    position: fixed;
    bottom:10px;
    width: 100%;
    padding: var(--space-layout-padding-lr);
}

.footer__ul{
    background: var(--color-2);
    height: 55px;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    border-radius: 40px;
}


.footer__ul li{
    list-style: none;
    background: var(--color-1);
    border-radius: 100%;
    height: 40px;
    width: 40px;
    display: flex;
    align-items: center;
    justify-content: center;

}

.footer__ul li a {
    width: 24px;
    height: 24px;
}